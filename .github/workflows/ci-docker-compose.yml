name: Docker Compose CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Cloner le dépôt
      uses: actions/checkout@v3

    - name: ⚙️ Configurer Docker
      uses: docker/setup-buildx-action@v2

    # Test des services Wazuh
    - name: 📊 Lancer les services Wazuh
      run: |
        docker compose -f wazuh/docker-compose.yml up -d --build || echo "TEST_FAILED=true" >> $GITHUB_ENV

    # Test des services ELK
    - name: 📈 Lancer les services ELK
      run: |
        docker compose -f ELK/Docker-compose.yml up -d --build || echo "TEST_FAILED=true" >> $GITHUB_ENV

    # Test des services OpenCTI
    - name: 🔍 Lancer les services OpenCTI
      run: |
        docker compose -f opencti/docker-compose.yml up -d --build || echo "TEST_FAILED=true" >> $GITHUB_ENV

    # Test des services Suricata
    - name: 🛡️ Lancer les services Suricata
      run: |
        docker compose -f Suricata/Docker-compose.yml up -d --build || echo "TEST_FAILED=true" >> $GITHUB_ENV

    - name: ✅ Vérifier l'état des services
      id: tests
      run: |
        set -e
        docker compose -f wazuh/docker-compose.yml ps
        docker compose -f ELK/Docker-compose.yml ps
        docker compose -f opencti/docker-compose.yml ps
        curl -f http://localhost:5601 || echo "TEST_FAILED=true" >> $GITHUB_ENV
        curl -f http://localhost:9200 || echo "TEST_FAILED=true" >> $GITHUB_ENV
        curl -f http://localhost:8080 || echo "TEST_FAILED=true" >> $GITHUB_ENV

    - name: 🗑️ Nettoyer les services
      run: |
        if [ -f Suricata/docker-compose.yml ]; then
          docker compose -f Suricata/docker-compose.yml down
        fi
        if [ -f wazuh/docker-compose.yml ]; then
          docker compose -f wazuh/docker-compose.yml down
        fi
        if [ -f ELK/Docker-compose.yml ]; then
          docker compose -f ELK/Docker-compose.yml down
        fi
        if [ -f opencti/docker-compose.yml ]; then
          docker compose -f opencti/docker-compose.yml down
        fi


    # Gestion de la branche cible avec correction
    - name: 🏷️ Déterminer la branche cible
      id: branch_target
      run: |
        echo "TEST_FAILED=${{ env.TEST_FAILED }}"  # Debug pour voir si la variable est bien définie
        if [[ "${{ env.TEST_FAILED }}" == "true" ]]; then
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          echo "BRANCH=erreur-$TIMESTAMP" >> $GITHUB_ENV
        else
          echo "BRANCH=dev" >> $GITHUB_ENV
        fi

    # Création et push sur la bonne branche
    - name: 🚀 Créer et Pousser la branche
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "github-actions@github.com"
        git checkout -b ${{ env.BRANCH }}
        git add .
        git commit -m "Mise à jour automatique via GitHub Actions"
        git push origin ${{ env.BRANCH }} --force || echo "PUSH_FAILED=true" >> $GITHUB_ENV
